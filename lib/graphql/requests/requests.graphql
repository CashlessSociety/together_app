query GetAllUsers {
    queryUser{
        id
        email
        name
        age
        isAdmin
        createdTimestamp
    }
}

query GetUserWithEmail($email: String) {
    getUser(email: $email){
        id
        name
        age
        email
        isAdmin
        createdTimestamp
    }
}


query GetUserWithId($id: ID) {
    getUser(id: $id){
        id
        name
        age
        email
        isAdmin
        createdTimestamp
    }
}

mutation CreateUser($email: String!, $name: String!, $age: Int!, $createdTimestamp: DateTime!){
    addUser(input: {email: $email, name: $name, age: $age, isAdmin: false, createdTimestamp: $createdTimestamp}){
        user{
            id
            name
            email
            isAdmin
            createdTimestamp
        }
    }
}

mutation CreateRequest($owner: UserRef!, $title: String!, $message: String!){
    addRequest(input: {owner: $owner, title: $title, message: $message}){
        request{
            id
            title
            message
            createdTimestamp
        }
    }
}

query GetAllRequests {
    queryRequest{
        id
        owner {
           name
        }
        title
        message
        createdTimestamp
    }
}

fragment HashtagFragmentData on Hashtag {
    id
    hashtag
    iconName
    blessed
    skillsAggregate{
        count
    }
    requestsAggregate{
        count
    }
}

query GetHashtagByName ($name: String) {
    getHashtag(hashtag: $name){
        ...HashtagFragmentData
    }
}


query GetHashtagById ($id: ID) {
    getHashtag(id: $id){
        ...HashtagFragmentData
    }
}


query GetAllHashtags{
    queryHashtag(order: {asc: hashtag}){
        ...HashtagFragmentData
    }
}

mutation AddHashtag($name: String!, $iconName: String = "", $blessed: Boolean = false ){
    addHashtag(input: {hashtag: $name, iconName: $iconName, blessed: $blessed}){
        hashtag {
            ...HashtagFragmentData
        }
    }
}

mutation UpdateHashtag($hashtagInput:UpdateHashtagInput!){
    updateHashtag(input: $hashtagInput){
        hashtag {
            ...HashtagFragmentData
        }
    }
}