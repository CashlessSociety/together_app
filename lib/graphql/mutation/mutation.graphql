mutation CreateUser($email: String!, $name: String!, $age: Int!, $createdTimestamp: DateTime!){
    addUser(input: {email: $email, name: $name, age: $age, isAdmin: false, createdTimestamp: $createdTimestamp}){
        user{
            id
            name
            email
            isAdmin
            createdTimestamp
        }
    }
}

mutation AddHashtagMeta(
    $metaName: String!,
    $iconName: String = "",
    $blessed: Boolean = false,
    $defaultHashtagVariant: HashtagVariantRef
){
    addHashtagMeta(input: {
        metaName: $metaName,
        iconName: $iconName,
        blessed: $blessed,
        hashtagVariants: [$defaultHashtagVariant]
    }){
        hashtagMeta {
            ...HashtagMetaFragmentData
        }
    }
}

mutation UpdateHashtagMeta($hashtagMetaInput: UpdateHashtagMetaInput!){
    updateHashtagMeta(input: $hashtagMetaInput){
        hashtagMeta {
            ...HashtagMetaFragmentData
        }
    }
}

mutation DeleteHashtagMeta($hashtagMetaFilter: HashtagMetaFilter!){
    deleteHashtagMeta(filter: $hashtagMetaFilter){
        msg
        numUids
        hashtagMeta {
            hashtagVariants {
                id
            }
        }
    }
}


mutation DeleteHashtagVariant($hashtagVariantFilter: HashtagVariantFilter!){
    deleteHashtagVariant(filter: $hashtagVariantFilter){
        msg
        numUids
    }
}


mutation CreateSkill($addHashtagMetaInputList: [AddHashtagMetaInput!]!, $addSkillInput: AddSkillInput!){
    addHashtagMeta(upsert: true, input: $addHashtagMetaInputList){
        numUids
    }
    addSkill(input: [$addSkillInput]){
        skill{
            id
            title
            message
            hashtagVariants{
                hashtagMeta{
                    id
                    metaName
                    iconName
                    hashtagVariants{
                        skillsAggregate{
                            count
                        }
                        requestsAggregate{
                            count
                        }
                    }
                }
            }
        }
    }
}