mutation CreateUser($email: String!, $name: String!, $age: Int!, $createdTimestamp: DateTime!){
    addUser(input: {
        email: $email,
        name: $name,
        age: $age,
        isAdmin: false,
        isTest: false,
        createdTimestamp: $createdTimestamp
    }){
        user{
            id
            name
            email
            isAdmin
            createdTimestamp
        }
    }
}

mutation CreateTester($testerInfo: [AddUserInput!]!){
    addUser(input: $testerInfo){
        user{
            id
            name
            email
            isAdmin
            isTest
            createdTimestamp
        }
    }
}


mutation DeleteTester{
    deleteUser(filter: {isTest: true}){
        numUids
    }
}


mutation UpdateUser($id: ID!, $name: String!, $bio: String!, $avatar: String!){
    updateUser(input: {
        filter: {id: [$id]}, set: {name: $name, bio: $bio, avatar: $avatar}}
    ){
        user {
            id
            name
            bio
        }
    }
}

mutation AddHashtag(
    $name: String!,
    $iconName: String = "",
    $blessed: Boolean = false,
    $blessedInt: Int = 0,
    $defaultHashtagVariant: HashtagVariantRef
){
    addHashtag(input: {
        name: $name,
        iconName: $iconName,
        blessed: $blessed,
        blessedInt: $blessedInt,
        skillCountAllTime: 0,
        skillCountLast24h: 0,
        skillCountLast1w: 0,
        requestCountAllTime: 0,
        requestCountLast24h: 0,
        requestCountLast1w: 0,
        hashtagVariants: [$defaultHashtagVariant]
    }){
        hashtag {
            ...HashtagFragmentData
        }
    }
}

mutation UpdateHashtag($hashtagInput: UpdateHashtagInput!){
    updateHashtag(input: $hashtagInput){
        hashtag {
            ...HashtagFragmentData
        }
    }
}

mutation DeleteHashtag($hashtagFilter: HashtagFilter!){
    deleteHashtag(filter: $hashtagFilter){
        msg
        numUids
        hashtag {
            hashtagVariants {
                id
            }
        }
    }
}


mutation DeleteHashtagVariant($hashtagVariantFilter: HashtagVariantFilter!){
    deleteHashtagVariant(filter: $hashtagVariantFilter){
        msg
        numUids
    }
}


mutation CreateSkill(
    $addHashtagInputList: [AddHashtagInput!]!,
    $addSkillInput: AddSkillInput!
){
    addHashtag(upsert: true, input: $addHashtagInputList){
        numUids
    }
    addSkill(input: [$addSkillInput]){
        skill{
            id
        }
    }
}

mutation UpdateSkill(
    $skillId: ID!,
    $addHashtagInputList: [AddHashtagInput!]!,
    $title: String!,
    $message: String!,
    $isAvailable: Boolean!,
    $hashtagsToSave: [HashtagVariantRef!]!,
    $hashtagsToDelete: [HashtagVariantRef!]!,
){
    addHashtag(upsert: true, input: $addHashtagInputList){
        numUids
    }
    updateSkill(input: {
        filter: {id: [$skillId]},
        remove: {
            hashtagVariants: $hashtagsToDelete
        }
        set: {
            title: $title
            message: $message
            isAvailable: $isAvailable
            hashtagVariants: $hashtagsToSave
        }
    }){
        skill{
            id
        }
    }
}

mutation UpdateSkillAvailable($skillId:ID!, $isAvailable: Boolean!){
    updateSkill(
        input: {
            filter: {id: [$skillId]}
            set: {isAvailable: $isAvailable}
        },
    ){
        skill{
            isAvailable
        }
    }
}

mutation RemoveSkill($skillId:ID!){
    deleteSkill(
        filter: {id: [$skillId]}
    ){
        skill{
            id
        }
    }
}

mutation CreateRequest(
    $addHashtagInputList: [AddHashtagInput!]!,
    $addRequestInput: AddRequestInput!
){
    addHashtag(upsert: true, input: $addHashtagInputList){
        numUids
    }
    addRequest(input: [$addRequestInput]){
        request{
            id
        }
    }
}

mutation UpdateRequest(
    $requestId: ID!,
    $addHashtagInputList: [AddHashtagInput!]!,
    $title: String!,
    $message: String!,
    $status: RequestStatus!,
    $hashtagsToSave: [HashtagVariantRef!]!,
    $hashtagsToDelete: [HashtagVariantRef!]!,
){
    addHashtag(upsert: true, input: $addHashtagInputList){
        numUids
    }
    updateRequest(input: {
        filter: {id: [$requestId]},
        remove: {
            hashtagVariants: $hashtagsToDelete
        }
        set: {
            title: $title
            message: $message
            status: $status
            hashtagVariants: $hashtagsToSave
        }
    }){
        request{
            id
        }
    }
}

mutation UpdateRequestAvailable($requestId:ID!, $status: RequestStatus!){
    updateRequest(
        input: {
            filter: {id: [$requestId]}
            set: {status: $status}
        },
    ){
        request{
            status
        }
    }
}

mutation RemoveRequest($requestId:ID!){
    deleteRequest(
        filter: {id: [$requestId]}
    ){
        request{
            id
        }
    }
}


mutation CreateTestGratitude($info : [AddGratitudeInput!]!){
    addGratitude(input: $info){
        numUids
    }
}

mutation DeleteTestGratitude{
    deleteGratitude(filter: {isTest: true}){
        numUids
    }
}